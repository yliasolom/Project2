#What causes antibiotic resistance?

1. Get the data
wget - download raw data from ncbi
#We need sequence in .fasta format (*_genomic.fna.gz) and annotation in .gff format(*_genomic.gff.gz)and also raw data



2. Inspect data
head 20                    (first 2- lines)
cat                        (see inside)
wc -l                      (how many reads are in each fastq file)



3. Filtering the reads FastQC
conda create -n fastqc_tool -c conda-forge -c bioconda -c fastqc 
fastqc [paired1] [paired2]  



4. TRIMMOMATIC
#we used different quality:
20: trimmomatic PE -phred33 amp_res_1.fastq amp_res_2.fastq outer/pairedPE_1.fq outer/singlePE_1.fq folder/pairedPE_2.fq outer/singlePE_2.fq LEADING:20 TRAILING:20 MINLEN:20 

30: ...LEADING:30 TRAILING:30 SLIDINGWINDOW:10:30 MINLEN:30 ILLUMINACLIP: TruSeq3-PE.fa:2:30:10 
Usage: [-version] [-threads <threads>] [-phred33|-phred64] [-trimlog <trimLogFile>] [-summary <statsSummaryFile>] [-quiet]
[-validatePairs] [-basein <inputBase> | <inputFile1> <inputFile2>] [-baseout <outputBase> | <outputFile1P> <outputFile1U> <outputFile2P> <outputFile2U>]
<trimmer1>TOPRHRED33



5. BWA-MEM (alignment via Burrows-Wheeler transformation)
1. install bwa 
2. Index the reference file 
3. Align the reads
4. Compress SAM file
5. Sort and index BAM file
6. Sort bam file by sequence coordinate on reference
7. Index bam file for faster search
--------------------
conda create -n bwa_tool -c conda-forge -c bioconda bwa
bwa index [reference]
bwa mem   [bwa mem [options] <idxbase> <in1.fq> [in2.fq]]
---------------------
conda create -n sam_tool -c conda-forge -c bioconda samtools (Tools for alignments in the SAM format)
samtools view [options(-S we used)] <in.bam>|<in.sam>|<in.cram> [region ...]
samtools flagstat [options] <in.bam> 
samtools sort [options...] [in.bam]       (Sort bam file by sequence coordinate on reference, WHERE -O, --output-fmt FORMAT)
samtools index [-bc] [-m INT] <in.bam> [out.index]


5. IGV (https://software.broadinstitute.org/software/igv/) IGV 
 (“Genomes”, ”Load Genome from File” and select our reference genome. Then select “File”, “Open from file” and select your BAM file. )
 
 
 
 6. Variant calling
 samtools mpileup [options] in1.bam [in2.bam [...]] where -f, --fasta-ref FILE    (faidx indexeS reference sequence file)



7. Variant effect prediction (VarScan: http://dkoboldt.github.io/varscan/)
conda create -n varscan_tool -c conda-forge -c soil varscan
java -jar VarScan.v2.4.3.jar mpileup2snp my.mpileup --min-var-freq 0.5 --variants --output-vcf 1 > VarScan_results.vcf

8.IGV:
1) Genome -> Local file (.fasta + .fasta.fai)
2) { Tracks -> Local file (.gff) } - for HW_1, for HW_2 it's no need 
3) Tracks -> Local file (.bam + .bam.bai)
4) Tracks -> Local file (.vcf)

9. snpEFF (annotation of snips)
wget http://pcingola.github.io/SnpEff/
#then the reference to build database:
wget https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/005/845/GCF_000005845.2_ASM584v2/GCF_000005845.2_ASM584v2_genomic.gbff.gz
#create database 
touch snpeff.config
nano snpeff.config #and and add there one stirng: k12.genome : ecoli_K12
#create folder for the database
mkdir -p data/k12
# Put there your .gbk file (unzip and rename to genes.gbk)
gunzip GCF_000005845.2_ASM584v2_genomic.gbff.gz
cp GCF_000005845.2_ASM584v2_genomic.gbff data/k12/genes.gbk
#create database
snpEff build -genbank -v k12
#annotate it!!!!)))
snpEff ann k12 VarScan_results_0.5.vcf






